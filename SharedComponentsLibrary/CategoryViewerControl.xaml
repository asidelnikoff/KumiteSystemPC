<UserControl x:Class="SharedComponentsLibrary.CategoryViewerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:SharedComponentsLibrary"
             mc:Ignorable="d"
             xmlns:lang="clr-namespace:LanguageLibrary;assembly=LanguageLibrary"
             xmlns:busyIndicator="https://github.com/moh3ngolshani/BusyIndicator"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             d:Height="800" d:Width="800"
             Background="{DynamicResource BackgroundLight}">
    <busyIndicator:BusyMask x:Name="BusyIndicator"
                            IsBusy="{Binding IsBusy}"
                            IndicatorType="Ring"
                            BusyContent="{x:Static lang:Resources.PleaseWait}"
                            BusyContentMargin="0,40,0,0"
                            IsBusyAtStartup="False">
        <Grid Margin="0,15">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <WrapPanel Grid.Column="1"
                           HorizontalAlignment="Right"
                           Margin="0,0,25,0">
                    <Button Content="{x:Static lang:Resources.ExportToFile}"
                            Margin="10,5"
                            Style="{DynamicResource SecondaryButton}"
                            Command="{Binding ExprotToFileCommand}" />
                    <Button Content="{x:Static lang:Resources.RegerateBronzeStage}"
                            Style="{DynamicResource SecondaryButton}"
                            IsEnabled="{Binding IsRegenerateBronzeButtonEnabled}"
                            Command="{Binding RegenerateBronzeStageCommand}"
                            Margin="10,5" />
                    <Button Margin="10,5"
                            Style="{DynamicResource SecondaryButton}"
                            Content="{Binding IsExternalResultsOpened, Converter={StaticResource IsExternalResultsBoardOpenedToText}}"
                            Visibility="{Binding CategoryResultsButtonVisibility}"
                            Command="{Binding ShowExternalResultsCommand}" />
                </WrapPanel>
                <WrapPanel HorizontalAlignment="Left" Margin="20,0" VerticalAlignment="Center">
                    <Label Content="{Binding Category.Name}"
                           Style="{DynamicResource Header}"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Margin="10,0" />
                    <Label Content="{x:Static lang:Resources.Complited}"
                           ContentStringFormat=" - {0}"
                           Visibility="{Binding CategoryComplitnessVisibility}"
                           Foreground="DarkGreen"
                           HorizontalAlignment="Center"
                           FontSize="12"
                           FontFamily="Montserrat"
                           FontWeight="Medium"
                           VerticalAlignment="Center" />
                    <Label Content="{x:Static lang:Resources.NotComplited}"
                           ContentStringFormat=" - {0}"
                           Visibility="{Binding CategoryNotComplitnessVisibility}"
                           Foreground="DarkRed"
                           HorizontalAlignment="Center"
                           FontSize="12"
                           FontFamily="Montserrat"
                           FontWeight="Medium"
                           VerticalAlignment="Center" />
                    <Button Margin="10"
                            Style="{DynamicResource SecondaryButton}"
                            Content="{x:Static lang:Resources.SwapCompetitors}"
                            Visibility="{Binding SwapCompetitorsButtonVisibility}"
                            Command="{Binding SwapCompetitorsCommand}" />
                    <Button Margin="10"
                            Style="{DynamicResource SecondaryButton}"
                            Content="{x:Static lang:Resources.Results}"
                            Visibility="{Binding CategoryResultsButtonVisibility}"
                            Command="{Binding ShowResultsCommand}" />

                </WrapPanel>
            </Grid>
            <Grid Margin="25" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="12*" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DataGrid Grid.Column="2"
                                  Margin="10,0"
                                  CanUserAddRows="False"
                                  Background="{DynamicResource LightGray}"
                                  ItemsSource="{Binding Competitors}">
                            <!--<DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Load match"/>
                                    <MenuItem Header="Finish current match"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>-->
                        </DataGrid>
                        <Label Grid.Row="1"
                               Content="{Binding MatchWinner}"
                               FontSize="14"
                               Margin="20,10,20,0"
                               FontFamily="Montserrat" />
                    </Grid>
                    <Grid Margin="10,0"
                          Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Content="{x:Static lang:Resources.Matches}"
                               FontFamily="Montserrat"
                               FontSize="10"
                               Margin="0,0,0,10" />
                        <ListView Grid.Row="1"
                                  Background="{DynamicResource LightGray}"
                                  ItemsSource="{Binding Matches}"
                                  SelectedItem="{Binding SelectedMatch}">
                            <ListView.ContextMenu>
                                <ContextMenu Visibility="{Binding MatchesContextMenuVisibility}">
                                    <MenuItem Header="{x:Static lang:Resources.LoadMatch}"
                                              Command="{Binding LoadMatchCommand}" />
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="MouseDoubleClick">
                                    <behaviors:InvokeCommandAction
                                        Command="{Binding LoadMatchCommand}">
                                    </behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </ListView>
                    </Grid>
                    <Grid Margin="10,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Content="{x:Static lang:Resources.Rounds}"
                               FontFamily="Montserrat"
                               FontSize="10"
                               Margin="0,0,0,10" />
                        <ListView Grid.Row="1"

                                  Background="{DynamicResource LightGray}"
                                  ItemsSource="{Binding Rounds}"
                                  SelectedItem="{Binding SelectedRound}">
                            <!--<ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Regenerate Repechage/Bronze"/>
                        </ContextMenu>
                    </ListView.ContextMenu>-->
                        </ListView>
                    </Grid>
                </Grid>
                <ScrollViewer Grid.Row="1"
                              Content="{Binding BracketsGrid}">
                </ScrollViewer>
            </Grid>
        </Grid>
    </busyIndicator:BusyMask>
</UserControl>